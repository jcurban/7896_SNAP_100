###############################################################################
#                                                                             #
# IAR C/C++ Compiler V1.40.1.50106 for STM8             02/Jul/2013  06:23:01 #
# Copyright 2010-2013 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  C:\Users\jurban\Documents\GitHub\7896_SNAP_100\main.c    #
#    Command line =  C:\Users\jurban\Documents\GitHub\7896_SNAP_100\main.c    #
#                    -e --enable_multibytes -On --no_cse --no_unroll          #
#                    --no_inline --no_code_motion --no_tbaa --no_cross_call   #
#                    --debug --code_model medium --data_model medium -o       #
#                    C:\Users\jurban\Documents\GitHub\7896_SNAP_100\Debug\Obj #
#                    \ --dlib_config "C:\Program Files\IAR Systems\Embedded   #
#                    Workbench 6.5\stm8\LIB\dlstm8mmn.h" -D STM8S007 -lC      #
#                    C:\Users\jurban\Documents\GitHub\7896_SNAP_100\Debug\Lis #
#                    t\ -I .\ --no_system_include --require_prototypes        #
#                    --vregs 16                                               #
#    List file    =  C:\Users\jurban\Documents\GitHub\7896_SNAP_100\Debug\Lis #
#                    t\main.lst                                               #
#    Object file  =  C:\Users\jurban\Documents\GitHub\7896_SNAP_100\Debug\Obj #
#                    \main.o                                                  #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\jurban\Documents\GitHub\7896_SNAP_100\main.c
      1          /*-------------extern -----------------------------------------------------------------------*/
      2          /* SNAP JOB#7896 USES STM8007C8T6 PROCESSOR                                           */
      3          /* - 32K FLASH 2KRAM  128 EEPROM  ver 1.00                                            */
      4          /*------------------------------------------------------------------------------------*/
      5          /* Includes ------------------------------------------------------------------*/
      6          #include "main.h"
      7          extern char CID_Value;
      8          extern char SNAP_State;
      9          extern void Send_Powered(void);
     10          extern void Wait_For_Update(void);
     11          extern void Process_Received_Update(void);
     12          extern void GetNetworkStatusFromGS1011(void);
     13          extern void Reset_Network_Access(void);
     14          extern void Send_Website_Update(void);
     15          
     16          extern u16 EEWRTimout;
     17          extern u8 Device_Rcvr_Complete_flag;
     18          extern int GS1011_Rvcr_Count;
     19          extern char GS1011_Xmit_Buffer;
     20          extern char *GS1011_Rcvr_Pointer;
     21          extern char GS1011_Received_Response_Flag;
     22          void SendYouThereMessageToGS1011(void);
     23          void InitializeGS1011Buffer(void);
     24          void InitializeDeviceBuffer (void);
     25          
     26          
     27          /* Local Var------------------------------------------------------------------*/

   \                                 In section .near.bss, align 1
     28          u8  TEST;
   \                     TEST:
   \   000000              DS8 1

   \                                 In section .near.bss, align 1
     29          u8  BLCNT_INDX;
   \                     BLCNT_INDX:
   \   000000              DS8 1

   \                                 In section .near.bss, align 1
     30          u8  BLCNT_STATE;
   \                     BLCNT_STATE:
   \   000000              DS8 1

   \                                 In section .near.bss, align 1
     31          u8  BLCNT_VAL;         /*VERSION BLINK VALUE*/
   \                     BLCNT_VAL:
   \   000000              DS8 1

   \                                 In section .near.bss, align 1
     32          u8  SysError;          /* bit 0 = 1 if Temp reading ou   t of limits
   \                     SysError:
   \   000000              DS8 1
     33                                    bit 1 = 1 if command start and no response*/
     34          /*--------------VERSION NUMBER OF THIS FIRMWARE-------------------------------*/

   \                                 In section .near.data, align 1
     35          u8 VER[4] = {VER0,VER1,VER2,VER3};
   \                     VER:
   \   000000 00 02 00 04  DC8 0, 2, 0, 4
     36          /*----------------------------------------------------------------------------*/
     37          
     38          /* Private function prototypes -----------------------------------------------*/
     39          void RCC_Configuration(void);
     40          void GPIO_Configuration(void);
     41          void TIMER1_Configuration (void);
     42          void InitEEData(void);
     43          void InitDeviceUART(void);
     44          void InitGS1011UART(void);
     45          /*external Functions ---------------------------------------------------------*/
     46          /*void Make_Send_SNAP_Ready_Message(void);*/
     47          void Send_powered_Message(void);
     48          void Save_PValues(void);
     49          /* Main powerup/main loop -----------------------------------------------*/
     50          extern char * GS1011_Xmit_Pointer;

   \                                 In section .far_func.text, align 1
     51          int main( void ){
     52            /* System Clocks Configuration */
     53            RCC_Configuration();
   \                     main:
   \   000000 8D ......    CALLF     RCC_Configuration
     54            /* Configure the GPIO ports */
     55            GPIO_Configuration();
   \   000004 8D ......    CALLF     GPIO_Configuration
     56            /*CONFIGURE TIMER1*/
     57            TIMER1_Configuration();
   \   000008 8D ......    CALLF     TIMER1_Configuration
     58            /*Configure device UART*/
     59            InitDeviceUART();
   \   00000C 8D ......    CALLF     InitDeviceUART
     60            /*Configure GS101 UART*/
     61            InitGS1011UART();
   \   000010 8D ......    CALLF     InitGS1011UART
     62            InitializeGS1011Buffer();
   \   000014 8D ......    CALLF     InitializeGS1011Buffer
     63            InitializeDeviceBuffer();
   \   000018 8D ......    CALLF     InitializeDeviceBuffer
     64            enableInterrupts();
   \   00001C 9A           RIM
     65            SNAP_State = 0;
   \   00001D 35 00 ....   MOV       L:SNAP_State, #0x0
     66            CID_Value = 0x00;
   \   000021 35 00 ....   MOV       L:CID_Value, #0x0
     67            GS1011_Received_Response_Flag = 0x00;
   \   000025 35 00 ....   MOV       L:GS1011_Received_Response_Flag, #0x0
     68            SendYouThereMessageToGS1011();                /* sacrificial message*/
   \   000029 8D ......    CALLF     SendYouThereMessageToGS1011
     69          
     70            while (1)
     71            {
     72              switch (SNAP_State){
   \                     ??main_0:
   \   00002D C6 ....      LD        A, L:SNAP_State
   \   000030 4D           TNZ       A
   \   000031 27 11        JREQ      L:??main_1
   \   000033 4A           DEC       A
   \   000034 27 14        JREQ      L:??main_2
   \   000036 4A           DEC       A
   \   000037 27 17        JREQ      L:??main_3
   \   000039 4A           DEC       A
   \   00003A 27 1A        JREQ      L:??main_4
   \   00003C 4A           DEC       A
   \   00003D 27 1D        JREQ      L:??main_5
   \   00003F 4A           DEC       A
   \   000040 27 20        JREQ      L:??main_6
   \   000042 20 E9        JRA       L:??main_0
     73              case 0:
     74                Send_Powered();
   \                     ??main_1:
   \   000044 8D ......    CALLF     Send_Powered
     75                break;
   \   000048 20 E3        JRA       L:??main_0
     76              case 1:
     77                Wait_For_Update();
   \                     ??main_2:
   \   00004A 8D ......    CALLF     Wait_For_Update
     78                break;
   \   00004E 20 DD        JRA       L:??main_0
     79              case 2:
     80                Process_Received_Update();
   \                     ??main_3:
   \   000050 8D ......    CALLF     Process_Received_Update
     81                break;
   \   000054 20 D7        JRA       L:??main_0
     82              case 3:
     83                GetNetworkStatusFromGS1011();
   \                     ??main_4:
   \   000056 8D ......    CALLF     GetNetworkStatusFromGS1011
     84                break;
   \   00005A 20 D1        JRA       L:??main_0
     85              case 4:
     86                Reset_Network_Access();
   \                     ??main_5:
   \   00005C 8D ......    CALLF     Reset_Network_Access
     87                break;
   \   000060 20 CB        JRA       L:??main_0
     88              case 5:
     89                Send_Website_Update();
   \                     ??main_6:
   \   000062 8D ......    CALLF     Send_Website_Update
     90                break;
   \   000066 20 C5        JRA       L:??main_0
     91              }
     92            }
     93           /*infinite loop*/
     94          }
     95          /* Get the EEData on startup-------------------------------------------------*/
     96          /*                                                                           */
     97          /*---------------------------------------------------------------------------*/

   \                                 In section .far_func.text, align 1
     98          void InitEEData(void){
     99          }
   \                     InitEEData:
   \   000000 87           RETF

   \                                 In section .far_func.text, align 1
    100          void assert_failed(uint8_t* file, uint32_t line)
    101          {
    102            /* User can add his own implementation to report the file name and line number,
    103               ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
    104          }
   \                     assert_failed:
   \   000000 87           RETF
    105          /*******************************************************************************
    106          * Function Name  : RCC_Configuration
    107          * Description    : Configures the different system clocks.
    108          *                 16MHZ INTERNAL OSCILLATOR HSI ENABLED BY DEFAULT
    109          * Input          : None
    110          * Output         : None
    111          * Return         : None
    112          *******************************************************************************/

   \                                 In section .far_func.text, align 1
    113          void RCC_Configuration(void){
    114            CLK->SWCR = 0x08;     /*SWIF SET TO AUTO*/
   \                     RCC_Configuration:
   \   000000 35 08 50C5   MOV       L:0x50c5, #0x8
    115            CLK->CKDIVR = 0;      /*SET TO FULL SPEED 16MHZ*/
   \   000004 35 00 50C6   MOV       L:0x50c6, #0x0
    116            CLK->PCKENR1 = 0x8D;  /*TIM1, I2C CLOCK ENABLED, UART1,3*/
   \   000008 35 8D 50C7   MOV       L:0x50c7, #0x8d
    117            CLK->PCKENR2 = 0x08;  /*ADC CLOCK ENABLED*/
   \   00000C 35 08 50CA   MOV       L:0x50ca, #0x8
    118            CLK->CSSR = 0x00;     /*security off*/
   \   000010 35 00 50C8   MOV       L:0x50c8, #0x0
    119          }
   \   000014 87           RETF
    120          /*******************************************************************************
    121          * Function Name  : GPIO_Configuration
    122          * Description    : Configures the different GPIO ports.
    123          * Input          : None
    124          * Output         : None
    125          * Return         : None
    126          *******************************************************************************/

   \                                 In section .far_func.text, align 1
    127          void GPIO_Configuration(void){
    128            GPIOA->DDR = 0xDF;  /*all outputs*/
   \                     GPIO_Configuration:
   \   000000 35 DF 5002   MOV       L:0x5002, #0xdf
    129            GPIOA->CR1 = 0x70; /*default inputs floating outputs OD*/
   \   000004 35 70 5003   MOV       L:0x5003, #0x70
    130            GPIOA->CR2 = 0; /*default values no ints, 2mhz speed*/
   \   000008 35 00 5004   MOV       L:0x5004, #0x0
    131            GPIOB->DDR = 0xF0;  /*4-7 outputs, 0-3 inputs*/
   \   00000C 35 F0 5007   MOV       L:0x5007, #0xf0
    132            GPIOB->CR1 = 0; /*default inputs floating outputs OD*/
   \   000010 35 00 5008   MOV       L:0x5008, #0x0
    133            GPIOB->CR2 = 0; /*default values no ints, 2mhz speed*/
   \   000014 35 00 5009   MOV       L:0x5009, #0x0
    134            GPIOC->DDR = 0xFF;  /*all outputs*/
   \   000018 35 FF 500C   MOV       L:0x500c, #0xff
    135            GPIOC->CR1 = 0xFF; /*outputs push pull*/
   \   00001C 35 FF 500D   MOV       L:0x500d, #0xff
    136            GPIOC->CR2 = 0; /*default values no ints, 2mhz speed*/
   \   000020 35 00 500E   MOV       L:0x500e, #0x0
    137            GPIOD->DDR = 0xBD;  /*all outputs except D1,D6 */
   \   000024 35 BD 5011   MOV       L:0x5011, #0xbd
    138            GPIOD->CR1 = 0xB1; /*outputs push pull except 2,3,46 OD*/
   \   000028 35 B1 5012   MOV       L:0x5012, #0xb1
    139            GPIOD->CR2 = 0; /*default values no ints, 2mhz speed*/
   \   00002C 35 00 5013   MOV       L:0x5013, #0x0
    140            GPIOE->DDR = 0xFF;  /*all outputs */
   \   000030 35 FF 5016   MOV       L:0x5016, #0xff
    141            GPIOE->CR1 = 0x09; /*default inputs floating outputs OD*/
   \   000034 35 09 5017   MOV       L:0x5017, #0x9
    142            GPIOE->CR2 = 0; /*default values no ints, 2mhz speed*/
   \   000038 35 00 5018   MOV       L:0x5018, #0x0
    143            GPIOG->DDR = 0xFE;  /*all outputs except PG0 */
   \   00003C 35 FE 5020   MOV       L:0x5020, #0xfe
    144            GPIOG->CR1 = 0xFE; /*outputs push pull input is floating */
   \   000040 35 FE 5021   MOV       L:0x5021, #0xfe
    145            GPIOG->CR2 = 0; /*default values no ints, 2mhz speed*/
   \   000044 35 00 5022   MOV       L:0x5022, #0x0
    146          }
   \   000048 87           RETF
    147          
    148          /* TIMER1 configuration -----------------------------------------------------*/
    149          /*USED FOR GP TIMING RUN AT 200HZ                                            */
    150          /*---------------------------------------------------------------------------*/

   \                                 In section .far_func.text, align 1
    151          void TIMER1_Configuration (void){
    152            TIM1->PSCRH = 0x00; /*prescale div by 4  (16m/4 = 4mhz)*/
   \                     TIMER1_Configuration:
   \   000000 35 00 5260   MOV       L:0x5260, #0x0
    153            TIM1->PSCRL = 0x03; /*prescale div by 4  (16m/4 = 4mhz)*/
   \   000004 35 03 5261   MOV       L:0x5261, #0x3
    154            TIM1->ARRH = 0x4E; /*auto reload = 20000 (4m/20k = 200)*/
   \   000008 35 4E 5262   MOV       L:0x5262, #0x4e
    155            TIM1->ARRL = 0x20;
   \   00000C 35 20 5263   MOV       L:0x5263, #0x20
    156            TIM1->CR1 = 0x91; /*enable counter with interrupts on overflow*/
   \   000010 35 91 5250   MOV       L:0x5250, #0x91
    157            TIM1->IER = 0x01; /*enable interrupts*/
   \   000014 35 01 5254   MOV       L:0x5254, #0x1
    158          }
   \   000018 87           RETF
    159          

   Section sizes:

   Bytes  Function/Label
   -----  --------------
       1  BLCNT_INDX
       1  BLCNT_STATE
       1  BLCNT_VAL
      73  GPIO_Configuration
       1  InitEEData
      21  RCC_Configuration
       1  SysError
       1  TEST
      25  TIMER1_Configuration
       4  VER
       1  assert_failed
     104  main

 
 225 bytes in section .far_func.text
   5 bytes in section .near.bss
   4 bytes in section .near.data
 
 225 bytes of CODE memory
   9 bytes of DATA memory

Errors: none
Warnings: none
