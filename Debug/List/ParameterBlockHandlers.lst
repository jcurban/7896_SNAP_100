###############################################################################
#                                                                             #
# IAR C/C++ Compiler V1.40.1.50106 for STM8             03/Jul/2013  05:48:35 #
# Copyright 2010-2013 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  C:\Users\jurban\Documents\GitHub\7896_SNAP_100\Parameter #
#                    BlockHandlers.c                                          #
#    Command line =  C:\Users\jurban\Documents\GitHub\7896_SNAP_100\Parameter #
#                    BlockHandlers.c -e --enable_multibytes -On --no_cse      #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_cross_call --debug --code_model medium              #
#                    --data_model medium -o C:\Users\jurban\Documents\GitHub\ #
#                    7896_SNAP_100\Debug\Obj\ --dlib_config "C:\Program       #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.5\stm8\LIB\dlstm8mmn.h" -D STM8S007 -lC                #
#                    C:\Users\jurban\Documents\GitHub\7896_SNAP_100\Debug\Lis #
#                    t\ -I .\ --no_system_include --require_prototypes        #
#                    --vregs 16                                               #
#    List file    =  C:\Users\jurban\Documents\GitHub\7896_SNAP_100\Debug\Lis #
#                    t\ParameterBlockHandlers.lst                             #
#    Object file  =  C:\Users\jurban\Documents\GitHub\7896_SNAP_100\Debug\Obj #
#                    \ParameterBlockHandlers.o                                #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\jurban\Documents\GitHub\7896_SNAP_100\ParameterBlockHandlers.c
      1          /**
      2            ******************************************************************************
      3           ********************************************************************************
      4            * @file    Parameter Block Handlers.c
      5            * @author  JUrban
      6            * @version V1.0
      7            * @date    12-June-2013
      8            * @brief   This file contains all the functions for handling 
      9                          the parameter blocks.
     10            ******************************************************************************
     11            ******************************************************************************
     12            */
     13          #include "SNAP_Defines.h"
     14          /* external routines*/
     15          extern void FillBuffer (char bufr[],char filchr, int cntr);
     16          /* local Routine prototypes */
     17          void Make_Website_Update_from_Processing_Buffer(void);
     18          void makePNumberHeader(char numb);
     19          void convertPNumber_to_ASCII(char numb);
     20          void copyPHeaderToWebsite(void);
     21          void Copy_ASCII_data_to_Website(void);
     22          
     23          /* conversion routines/data*/
     24          extern void Int2ASCII(void);
     25          extern char B2ASCBuf[];
     26          extern char tempblock[];
     27          extern char PHeaderBuffer[];
     28          extern char Packet_Data_Buffer[];
     29          extern char Device_Processing_Buffer[];
     30          
     31          /*******************************************************************************
     32          *****        Make_Website_Update_from_Processing_Buffer                     ****
     33          *****   taskes the raw device data, and converts to ASCII for website       ****
     34          *****  makes a pnumber header in the following format:                      ****
     35          *****     /P1/... /P15/ then converts binary if necessary                   ****
     36          ***** this creates a buffer with ONLY parameter data, no other headers are  ****
     37          *****   included. ex. /P1/0000010123456789/P2/700/P3/800/P4/900.....        ****
     38          ***** the "httpsend = bwgroup.." is a stock block when ready to send the    ****
     39          ***** httpsend block is copied to the xmit buffer, then the parameters are added
     40          *****                                                                       ****
     41          *****  all data going into the website_param+buffer uses Website_Param_Pointer
     42          *****  to put it into the buffer
     43          *******************************************************************************/

   \                                 In section .far_func.text, align 1
     44          void Make_Website_Update_from_Processing_Buffer(void){
   \                     Make_Website_Update_from_Processing_Buffer:
   \   000000 8D ......    CALLF     L:?push_l2
   \   000004 3B ....      PUSH      S:?b12
     45          char PNumber;
     46          int ProcessPtr;
     47          int Packet_Data_Pointer;
     48          /* Website_Parameter_ASCII_Buffer*/
     49          
     50          
     51          PNumber = 1;
   \   000007 A6 01        LD        A, #0x1
   \   000009 B7 ..        LD        S:?b12, A
     52          Packet_Data_Pointer = 0;
   \   00000B 5F           CLRW      X
   \   00000C BF ..        LDW       S:?w5, X
     53          for (ProcessPtr =3; ProcessPtr <BFRSIZE;ProcessPtr++){
   \   00000E AE 0003      LDW       X, #0x3
   \   000011 BF ..        LDW       S:?w4, X
   \                     ??Make_Website_Update_from_Processing_Buffer_0:
   \   000013 BE ..        LDW       X, S:?w4
   \   000015 A3 00FF      CPW       X, #0xff
   \   000018 2E 43        JRSGE     L:??Make_Website_Update_from_Processing_Buffer_1
     54            makePNumberHeader(PNumber); /* make /Pxx/ header for data*/
   \   00001A B6 ..        LD        A, S:?b12
   \   00001C 8D ......    CALLF     makePNumberHeader
     55            if (Device_Processing_Buffer[ProcessPtr] == 'A'){
   \   000020 A6 41        LD        A, #0x41
   \   000022 BE ..        LDW       X, S:?w4
   \   000024 D1 ....      CP        A, (L:Device_Processing_Buffer,X)
   \   000027 26 28        JRNE      L:??Make_Website_Update_from_Processing_Buffer_2
     56              ProcessPtr++;
   \   000029 BE ..        LDW       X, S:?w4
   \   00002B 5C           INCW      X
   \   00002C BF ..        LDW       S:?w4, X
     57              for (ProcessPtr=ProcessPtr ; ProcessPtr<BFRSIZE;ProcessPtr++){
   \                     ??Make_Website_Update_from_Processing_Buffer_3:
   \   00002E BE ..        LDW       X, S:?w4
   \   000030 A3 00FF      CPW       X, #0xff
   \   000033 2E 1C        JRSGE     L:??Make_Website_Update_from_Processing_Buffer_2
     58                  if (Device_Processing_Buffer[ProcessPtr] == ',') break;
   \   000035 A6 2C        LD        A, #0x2c
   \   000037 BE ..        LDW       X, S:?w4
   \   000039 D1 ....      CP        A, (L:Device_Processing_Buffer,X)
   \   00003C 26 02        JRNE      L:??Make_Website_Update_from_Processing_Buffer_4
   \   00003E 20 11        JRA       L:??Make_Website_Update_from_Processing_Buffer_2
     59                Packet_Data_Buffer[Packet_Data_Pointer] = Device_Processing_Buffer[ProcessPtr];
   \                     ??Make_Website_Update_from_Processing_Buffer_4:
   \   000040 BE ..        LDW       X, S:?w4
   \   000042 D6 ....      LD        A, (L:Device_Processing_Buffer,X)
   \   000045 BE ..        LDW       X, S:?w5
   \   000047 D7 ....      LD        (L:Packet_Data_Buffer,X), A
     60              }
   \   00004A BE ..        LDW       X, S:?w4
   \   00004C 5C           INCW      X
   \   00004D BF ..        LDW       S:?w4, X
   \   00004F 20 DD        JRA       L:??Make_Website_Update_from_Processing_Buffer_3
     61            }
     62                ProcessPtr++;
   \                     ??Make_Website_Update_from_Processing_Buffer_2:
   \   000051 BE ..        LDW       X, S:?w4
   \   000053 5C           INCW      X
   \   000054 BF ..        LDW       S:?w4, X
     63          
     64          } 
   \   000056 BE ..        LDW       X, S:?w4
   \   000058 5C           INCW      X
   \   000059 BF ..        LDW       S:?w4, X
   \   00005B 20 B6        JRA       L:??Make_Website_Update_from_Processing_Buffer_0
     65          
     66          }
   \                     ??Make_Website_Update_from_Processing_Buffer_1:
   \   00005D 32 ....      POP       S:?b12
   \   000060 AC ......    JPF       L:?epilogue_l2

   \                                 In section .far_func.text, align 1
     67          void copyPHeaderToWebsite(void){
     68          }
   \                     copyPHeaderToWebsite:
   \   000000 87           RETF

   \                                 In section .far_func.text, align 1
     69          void Copy_ASCII_data_to_Website(void){
     70          }
   \                     Copy_ASCII_data_to_Website:
   \   000000 87           RETF
     71          /*****************************************************************************
     72           *****             makePNumberHeader                                      ****
     73           ****************************************************************************/

   \                                 In section .far_func.text, align 1
     74          void makePNumberHeader(char numb){
   \                     makePNumberHeader:
   \   000000 3B ....      PUSH      S:?b8
   \   000003 B7 ..        LD        S:?b8, A
     75            FillBuffer(PHeaderBuffer,0x00, 5);
   \   000005 90AE 0005    LDW       Y, #0x5
   \   000009 4F           CLR       A
   \   00000A AE ....      LDW       X, #PHeaderBuffer
   \   00000D 8D ......    CALLF     FillBuffer
     76            tempblock[0] = numb;
   \   000011 B6 ..        LD        A, S:?b8
   \   000013 C7 ....      LD        L:tempblock, A
     77            Int2ASCII();
   \   000016 8D ......    CALLF     Int2ASCII
     78            PHeaderBuffer[0] = '/';
   \   00001A 35 2F ....   MOV       L:PHeaderBuffer, #0x2f
     79            PHeaderBuffer[1] = 'P';
   \   00001E 35 50 ....   MOV       L:PHeaderBuffer + 1, #0x50
     80              if (B2ASCBuf[6]!= '0'){
   \   000022 C6 ....      LD        A, L:B2ASCBuf + 6
   \   000025 A1 30        CP        A, #0x30
   \   000027 27 12        JREQ      L:??makePNumberHeader_0
     81                PHeaderBuffer[2] = B2ASCBuf[6];
   \   000029 C6 ....      LD        A, L:B2ASCBuf + 6
   \   00002C C7 ....      LD        L:PHeaderBuffer + 2, A
     82                PHeaderBuffer[3] = B2ASCBuf[7];
   \   00002F C6 ....      LD        A, L:B2ASCBuf + 7
   \   000032 C7 ....      LD        L:PHeaderBuffer + 3, A
     83                PHeaderBuffer[4] = '/';
   \   000035 35 2F ....   MOV       L:PHeaderBuffer + 4, #0x2f
   \   000039 20 0A        JRA       L:??makePNumberHeader_1
     84               }
     85               else{
     86                PHeaderBuffer[2] = B2ASCBuf[7];
   \                     ??makePNumberHeader_0:
   \   00003B C6 ....      LD        A, L:B2ASCBuf + 7
   \   00003E C7 ....      LD        L:PHeaderBuffer + 2, A
     87                PHeaderBuffer[3] = '/';
   \   000041 35 2F ....   MOV       L:PHeaderBuffer + 3, #0x2f
     88               }
     89          }
   \                     ??makePNumberHeader_1:
   \   000045 32 ....      POP       S:?b8
   \   000048 87           RETF

   Section sizes:

   Bytes  Function/Label
   -----  --------------
       1  Copy_ASCII_data_to_Website
     100  Make_Website_Update_from_Processing_Buffer
       1  copyPHeaderToWebsite
      73  makePNumberHeader

 
 175 bytes in section .far_func.text
 
 175 bytes of CODE memory

Errors: none
Warnings: none
