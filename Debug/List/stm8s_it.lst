###############################################################################
#                                                                             #
# IAR C/C++ Compiler V1.40.1.50106 for STM8             02/Jul/2013  07:39:07 #
# Copyright 2010-2013 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  C:\Users\jurban\Documents\GitHub\7896_SNAP_100\stm8s_it. #
#                    c                                                        #
#    Command line =  C:\Users\jurban\Documents\GitHub\7896_SNAP_100\stm8s_it. #
#                    c -e --enable_multibytes -On --no_cse --no_unroll        #
#                    --no_inline --no_code_motion --no_tbaa --no_cross_call   #
#                    --debug --code_model medium --data_model medium -o       #
#                    C:\Users\jurban\Documents\GitHub\7896_SNAP_100\Debug\Obj #
#                    \ --dlib_config "C:\Program Files\IAR Systems\Embedded   #
#                    Workbench 6.5\stm8\LIB\dlstm8mmn.h" -D STM8S007 -lC      #
#                    C:\Users\jurban\Documents\GitHub\7896_SNAP_100\Debug\Lis #
#                    t\ -I .\ --no_system_include --require_prototypes        #
#                    --vregs 16                                               #
#    List file    =  C:\Users\jurban\Documents\GitHub\7896_SNAP_100\Debug\Lis #
#                    t\stm8s_it.lst                                           #
#    Object file  =  C:\Users\jurban\Documents\GitHub\7896_SNAP_100\Debug\Obj #
#                    \stm8s_it.o                                              #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\jurban\Documents\GitHub\7896_SNAP_100\stm8s_it.c
      1          /**
      2            ******************************************************************************
      3            * @file     stm8s_it.c
      4            * @author   MCD Application Team
      5            * @version  V2.1.0
      6            * @date     18-November-2011
      7            * @brief    Main Interrupt Service Routines.
      8            *           This file provides template for all peripherals interrupt service
      9            *           routine.
     10            ******************************************************************************
     11            * @attention
     12            *
     13            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     14            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     15            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     16            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     17            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     18            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     19            * FOR MORE INFORMATION PLEASE READ CAREFULLY THE LICENSE AGREEMENT FILE LOCATED 
     20            * IN THE ROOT DIRECTORY OF THIS FIRMWARE PACKAGE.
     21          	*
     22            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
     23            ******************************************************************************
     24            */
     25          
     26          /* Includes ------------------------------------------------------------------*/
     27          #include "stm8s_it.h"
     28          
     29          /** @addtogroup Template_Project
     30            * @{
     31            */
     32          void Get_Device_Char (void);
     33          void Send_Next_Char_to_Device(void);
     34          void GS1011_Received_Data_Handler(void);
     35          void Sending_GS1011_Data_Handler(void);
     36          /* Private typedef -----------------------------------------------------------*/
     37          /* Private define ------------------------------------------------------------*/
     38          /* Private macro -------------------------------------------------------------*/
     39          /* Private variables ---------------------------------------------------------*/
     40          extern char GS1011_Rcvr_EOM_Timer;
     41          ;

   \                                 In section .near.bss, align 1
     42          u16 StartupTimer;
   \                     StartupTimer:
   \   000000              DS8 2

   \                                 In section .near.bss, align 1
     43          u16 SetCmdTempTimer1;
   \                     SetCmdTempTimer1:
   \   000000              DS8 2

   \                                 In section .near.bss, align 1
     44          u16 SetCmdTempTimer2;
   \                     SetCmdTempTimer2:
   \   000000              DS8 2

   \                                 In section .near.bss, align 1
     45          u16 SetCmdExitTimer;
   \                     SetCmdExitTimer:
   \   000000              DS8 2

   \                                 In section .near.bss, align 1
     46          u16 SysOnOffTmr;
   \                     SysOnOffTmr:
   \   000000              DS8 2

   \                                 In section .near.bss, align 1
     47          u16 LoopControlDelay;
   \                     LoopControlDelay:
   \   000000              DS8 2

   \                                 In section .near.bss, align 1
     48          u16 FCTimer;
   \                     FCTimer:
   \   000000              DS8 2

   \                                 In section .near.bss, align 1
     49          u16 SysSSTimer;
   \                     SysSSTimer:
   \   000000              DS8 2
     50          extern char GS1011_Rcvr_Timeout;
     51          /* Private function prototypes -----------------------------------------------*/
     52          /* Private functions ---------------------------------------------------------*/
     53          /* Public functions ----------------------------------------------------------*/
     54          
     55          #ifdef _COSMIC_
     56          /**
     57            * @brief Dummy Interrupt routine
     58            * @par Parameters:
     59            * None
     60            * @retval
     61            * None
     62          */
     63          INTERRUPT_HANDLER(NonHandledInterrupt, 25)
     64          {
     65            /* In order to detect unexpected events during development,
     66               it is recommended to set a breakpoint on the following instruction.
     67            */
     68          }
     69          #endif /*_COSMIC_*/
     70          
     71          /**
     72            * @brief TRAP Interrupt routine
     73            * @param  None
     74            * @retval None
     75            */

   \                                 In section .far_func.text, align 1
     76          INTERRUPT_HANDLER_TRAP(TRAP_IRQHandler)
     77          {
     78            /* In order to detect unexpected events during development,
     79               it is recommended to set a breakpoint on the following instruction.
     80            */
     81          }
   \                     TRAP_IRQHandler:
   \                     _interrupt_1:
   \   000000 80           IRET
     82          
     83          /**
     84            * @brief Top Level Interrupt routine.
     85            * @param  None
     86            * @retval None
     87            */

   \                                 In section .far_func.text, align 1
     88          INTERRUPT_HANDLER(TLI_IRQHandler, 0)
     89          
     90          {
     91            /* In order to detect unexpected events during development,
     92               it is recommended to set a breakpoint on the following instruction.
     93            */
     94          }
   \                     TLI_IRQHandler:
   \                     _interrupt_2:
   \   000000 80           IRET
     95          
     96          /**
     97            * @brief Auto Wake Up Interrupt routine.
     98            * @param  None
     99            * @retval None
    100            */

   \                                 In section .far_func.text, align 1
    101          INTERRUPT_HANDLER(AWU_IRQHandler, 1)
    102          {
    103            /* In order to detect unexpected events during development,
    104               it is recommended to set a breakpoint on the following instruction.
    105            */
    106          }
   \                     AWU_IRQHandler:
   \                     _interrupt_3:
   \   000000 80           IRET
    107          
    108          /**
    109            * @brief Clock Controller Interrupt routine.
    110            * @param  None
    111            * @retval None
    112            */

   \                                 In section .far_func.text, align 1
    113          INTERRUPT_HANDLER(CLK_IRQHandler, 2)
    114          {
    115            /* In order to detect unexpected events during development,
    116               it is recommended to set a breakpoint on the following instruction.
    117            */
    118          }
   \                     CLK_IRQHandler:
   \                     _interrupt_4:
   \   000000 80           IRET
    119          
    120          /**
    121            * @brief External Interrupt PORTA Interrupt routine.
    122            * @param  None
    123            * @retval None
    124            */

   \                                 In section .far_func.text, align 1
    125          INTERRUPT_HANDLER(EXTI_PORTA_IRQHandler, 3)
    126          {
    127            /* In order to detect unexpected events during development,
    128               it is recommended to set a breakpoint on the following instruction.
    129            */
    130          }
   \                     EXTI_PORTA_IRQHandler:
   \                     _interrupt_5:
   \   000000 80           IRET
    131          
    132          /**
    133            * @brief External Interrupt PORTB Interrupt routine.
    134            * @param  None
    135            * @retval None
    136            */

   \                                 In section .far_func.text, align 1
    137          INTERRUPT_HANDLER(EXTI_PORTB_IRQHandler, 4)
    138          {
    139            /* In order to detect unexpected events during development,
    140               it is recommended to set a breakpoint on the following instruction.
    141            */
    142          }
   \                     EXTI_PORTB_IRQHandler:
   \                     _interrupt_6:
   \   000000 80           IRET
    143          
    144          /**
    145            * @brief External Interrupt PORTC Interrupt routine.
    146            * @param  None
    147            * @retval None
    148            */

   \                                 In section .far_func.text, align 1
    149          INTERRUPT_HANDLER(EXTI_PORTC_IRQHandler, 5)
    150          {
    151            /* In order to detect unexpected events during development,
    152               it is recommended to set a breakpoint on the following instruction.
    153            */
    154          }
   \                     EXTI_PORTC_IRQHandler:
   \                     _interrupt_7:
   \   000000 80           IRET
    155          
    156          /**
    157            * @brief External Interrupt PORTD Interrupt routine.
    158            * @param  None
    159            * @retval None
    160            */

   \                                 In section .far_func.text, align 1
    161          INTERRUPT_HANDLER(EXTI_PORTD_IRQHandler, 6)
    162          {
    163            /* In order to detect unexpected events during development,
    164               it is recommended to set a breakpoint on the following instruction.
    165            */
    166          }
   \                     EXTI_PORTD_IRQHandler:
   \                     _interrupt_8:
   \   000000 80           IRET
    167          
    168          /**
    169            * @brief External Interrupt PORTE Interrupt routine.
    170            * @param  None
    171            * @retval None
    172            */

   \                                 In section .far_func.text, align 1
    173          INTERRUPT_HANDLER(EXTI_PORTE_IRQHandler, 7)
    174          {
    175            /* In order to detect unexpected events during development,
    176               it is recommended to set a breakpoint on the following instruction.
    177            */
    178          }
   \                     EXTI_PORTE_IRQHandler:
   \                     _interrupt_9:
   \   000000 80           IRET
    179          
    180          #ifdef STM8S903
    181          /**
    182            * @brief External Interrupt PORTF Interrupt routine.
    183            * @param  None
    184            * @retval None
    185            */
    186          INTERRUPT_HANDLER(EXTI_PORTF_IRQHandler, 8)
    187          {
    188            /* In order to detect unexpected events during development,
    189               it is recommended to set a breakpoint on the following instruction.
    190            */
    191          }
    192          #endif /*STM8S903*/
    193          
    194          #if defined (STM8S208) || defined (STM8AF52Ax)
    195          /**
    196            * @brief CAN RX Interrupt routine.
    197            * @param  None
    198            * @retval None
    199            */
    200          INTERRUPT_HANDLER(CAN_RX_IRQHandler, 8)
    201          {
    202            /* In order to detect unexpected events during development,
    203               it is recommended to set a breakpoint on the following instruction.
    204            */
    205          }
    206          
    207          /**
    208            * @brief CAN TX Interrupt routine.
    209            * @param  None
    210            * @retval None
    211            */
    212          INTERRUPT_HANDLER(CAN_TX_IRQHandler, 9)
    213          {
    214            /* In order to detect unexpected events during development,
    215               it is recommended to set a breakpoint on the following instruction.
    216            */
    217          }
    218          #endif /*STM8S208 || STM8AF52Ax */
    219          
    220          /**
    221            * @brief SPI Interrupt routine.
    222            * @param  None
    223            * @retval None
    224            */

   \                                 In section .far_func.text, align 1
    225          INTERRUPT_HANDLER(SPI_IRQHandler, 10)
    226          {
    227            /* In order to detect unexpected events during development,
    228               it is recommended to set a breakpoint on the following instruction.
    229            */
    230          }
   \                     SPI_IRQHandler:
   \                     _interrupt_12:
   \   000000 80           IRET
    231          
    232          /**
    233            * @brief Timer1 Update/Overflow/Trigger/Break Interrupt routine.
    234            * interrupts at 200hz (5ms per pass)
    235            * @retval None
    236            */

   \                                 In section .far_func.text, align 1
    237          INTERRUPT_HANDLER(TIM1_UPD_OVF_TRG_BRK_IRQHandler, 11){
    238            if(GS1011_Rcvr_EOM_Timer){
   \                     TIM1_UPD_OVF_TRG_BRK_IRQHandler:
   \                     _interrupt_13:
   \   000000 C6 ....      LD        A, L:GS1011_Rcvr_EOM_Timer
   \   000003 A1 00        CP        A, #0x0
   \   000005 27 13        JREQ      L:??TIM1_UPD_OVF_TRG_BRK_IRQHandler_0
    239              GS1011_Rcvr_EOM_Timer--;
   \   000007 C6 ....      LD        A, L:GS1011_Rcvr_EOM_Timer
   \   00000A AB FF        ADD       A, #0xff
   \   00000C C7 ....      LD        L:GS1011_Rcvr_EOM_Timer, A
    240              if (GS1011_Rcvr_EOM_Timer == 0)
   \   00000F C6 ....      LD        A, L:GS1011_Rcvr_EOM_Timer
   \   000012 A1 00        CP        A, #0x0
   \   000014 26 04        JRNE      L:??TIM1_UPD_OVF_TRG_BRK_IRQHandler_0
    241                GS1011_Rcvr_Timeout = 1;
   \   000016 35 01 ....   MOV       L:GS1011_Rcvr_Timeout, #0x1
    242            }
    243            TIM1->SR1 &= 0x7E;  /*CLR UIF INT BIT*/
   \                     ??TIM1_UPD_OVF_TRG_BRK_IRQHandler_0:
   \   00001A C6 5255      LD        A, L:0x5255
   \   00001D A4 7E        AND       A, #0x7e
   \   00001F C7 5255      LD        L:0x5255, A
    244          }
   \   000022 80           IRET
    245          
    246          /**
    247            * @brief Timer1 Capture/Compare Interrupt routine.
    248            * @param  None
    249            * @retval None
    250            */

   \                                 In section .far_func.text, align 1
    251          INTERRUPT_HANDLER(TIM1_CAP_COM_IRQHandler, 12)
    252          {
    253            /* In order to detect unexpected events during development,
    254               it is recommended to set a breakpoint on the following instruction.
    255            */
    256          }
   \                     TIM1_CAP_COM_IRQHandler:
   \                     _interrupt_14:
   \   000000 80           IRET
    257          
    258          #ifdef STM8S903
    259          /**
    260            * @brief Timer5 Update/Overflow/Break/Trigger Interrupt routine.
    261            * @param  None
    262            * @retval None
    263            */
    264          INTERRUPT_HANDLER(TIM5_UPD_OVF_BRK_TRG_IRQHandler, 13)
    265          {
    266            /* In order to detect unexpected events during development,
    267               it is recommended to set a breakpoint on the following instruction.
    268            */
    269          }
    270          
    271          /**
    272            * @brief Timer5 Capture/Compare Interrupt routine.
    273            * @param  None
    274            * @retval None
    275            */
    276          INTERRUPT_HANDLER(TIM5_CAP_COM_IRQHandler, 14)
    277          {
    278            /* In order to detect unexpected events during development,
    279               it is recommended to set a breakpoint on the following instruction.
    280            */
    281          }
    282          
    283          #else /*STM8S208, STM8S207, STM8S105 or STM8S103 or STM8AF62Ax or STM8AF52Ax or STM8AF626x */
    284          /**
    285          * @brief Timer2 Update/Overflow/Break Interrupt routine.
    286          * @param  None
    287          * @retval None
    288          */

   \                                 In section .far_func.text, align 1
    289          INTERRUPT_HANDLER(TIM2_UPD_OVF_BRK_IRQHandler, 13)
    290          {
    291            /* In order to detect unexpected events during development,
    292            it is recommended to set a breakpoint on the following instruction.
    293            */
    294          }
   \                     TIM2_UPD_OVF_BRK_IRQHandler:
   \                     _interrupt_15:
   \   000000 80           IRET
    295          
    296          /**
    297          * @brief Timer2 Capture/Compare Interrupt routine.
    298          * @param  None
    299          * @retval None
    300          */

   \                                 In section .far_func.text, align 1
    301          INTERRUPT_HANDLER(TIM2_CAP_COM_IRQHandler, 14)
    302          {
    303            /* In order to detect unexpected events during development,
    304            it is recommended to set a breakpoint on the following instruction.
    305            */
    306          }
   \                     TIM2_CAP_COM_IRQHandler:
   \                     _interrupt_16:
   \   000000 80           IRET
    307          #endif /*STM8S903*/
    308          
    309          #if defined (STM8S208) || defined(STM8S207) || defined(STM8S007) || defined(STM8S105) || \
    310              defined(STM8S005) ||  defined (STM8AF62Ax) || defined (STM8AF52Ax) || defined (STM8AF626x)
    311          /**
    312            * @brief Timer3 Update/Overflow/Break Interrupt routine.
    313            * @param  None
    314            * @retval None
    315            */

   \                                 In section .far_func.text, align 1
    316          INTERRUPT_HANDLER(TIM3_UPD_OVF_BRK_IRQHandler, 15)
    317          {
    318            /* In order to detect unexpected events during development,
    319               it is recommended to set a breakpoint on the following instruction.
    320            */
    321          }
   \                     TIM3_UPD_OVF_BRK_IRQHandler:
   \                     _interrupt_17:
   \   000000 80           IRET
    322          
    323          /**
    324            * @brief Timer3 Capture/Compare Interrupt routine.
    325            * @param  None
    326            * @retval None
    327            */

   \                                 In section .far_func.text, align 1
    328          INTERRUPT_HANDLER(TIM3_CAP_COM_IRQHandler, 16)
    329          {
    330            /* In order to detect unexpected events during development,
    331               it is recommended to set a breakpoint on the following instruction.
    332            */
    333          }
   \                     TIM3_CAP_COM_IRQHandler:
   \                     _interrupt_18:
   \   000000 80           IRET
    334          #endif /*STM8S208, STM8S207 or STM8S105 or STM8AF62Ax or STM8AF52Ax or STM8AF626x */
    335          
    336          #if defined (STM8S208) || defined(STM8S207) || defined(STM8S007) || defined(STM8S103) || \
    337              defined(STM8S003) ||  defined (STM8AF62Ax) || defined (STM8AF52Ax) || defined (STM8S903)
    338          /**
    339            * @brief UART1 TX Interrupt routine.
    340            * @param  None
    341            * @retval None
    342            */

   \                                 In section .far_func.text, align 1
    343          INTERRUPT_HANDLER(UART1_TX_IRQHandler, 17)
    344          {
   \                     UART1_TX_IRQHandler:
   \                     _interrupt_19:
   \   000000 8A           PUSH      CC
   \   000001 84           POP       A
   \   000002 A4 BF        AND       A, #0xbf
   \   000004 88           PUSH      A
   \   000005 86           POP       CC
   \   000006 8D ......    CALLF     L:?push_l0
   \   00000A 8D ......    CALLF     L:?push_l1
    345            /* In order to detect unexpected events during development,
    346               it is recommended to set a breakpoint on the following instruction.
    347            */
    348            Sending_GS1011_Data_Handler();
   \   00000E 8D ......    CALLF     Sending_GS1011_Data_Handler
    349          }
   \   000012 8D ......    CALLF     L:?pop_l1
   \   000016 8D ......    CALLF     L:?pop_l0
   \   00001A 80           IRET
    350          
    351          /**
    352            * @brief UART1 RX Interrupt routine.
    353            * @param  None
    354            * @retval None
    355            */

   \                                 In section .far_func.text, align 1
    356          INTERRUPT_HANDLER(UART1_RX_IRQHandler, 18)
    357          {
   \                     UART1_RX_IRQHandler:
   \                     _interrupt_20:
   \   000000 8A           PUSH      CC
   \   000001 84           POP       A
   \   000002 A4 BF        AND       A, #0xbf
   \   000004 88           PUSH      A
   \   000005 86           POP       CC
   \   000006 8D ......    CALLF     L:?push_l0
   \   00000A 8D ......    CALLF     L:?push_l1
    358            GS1011_Received_Data_Handler();
   \   00000E 8D ......    CALLF     GS1011_Received_Data_Handler
    359            /* In order to detect unexpected events during development,
    360               it is recommended to set a breakpoint on the following instruction.
    361            */
    362          }
   \   000012 8D ......    CALLF     L:?pop_l1
   \   000016 8D ......    CALLF     L:?pop_l0
   \   00001A 80           IRET
    363          #endif /*STM8S208 or STM8S207 or STM8S103 or STM8S903 or STM8AF62Ax or STM8AF52Ax */
    364          
    365          /**
    366            * @brief I2C Interrupt routine.
    367            * @param  None
    368            * @retval None
    369            */

   \                                 In section .far_func.text, align 1
    370          INTERRUPT_HANDLER(I2C_IRQHandler, 19)
    371          {
    372            /* In order to detect unexpected events during development,
    373               it is recommended to set a breakpoint on the following instruction.
    374            */
    375          }
   \                     I2C_IRQHandler:
   \                     _interrupt_21:
   \   000000 80           IRET
    376          
    377          #if defined(STM8S105) || defined(STM8S005) ||  defined (STM8AF626x)
    378          /**
    379            * @brief UART2 TX interrupt routine.
    380            * @param  None
    381            * @retval None
    382            */
    383          INTERRUPT_HANDLER(UART2_TX_IRQHandler, 20)
    384          {
    385            /* In order to detect unexpected events during development,
    386               it is recommended to set a breakpoint on the following instruction.
    387            */
    388          }
    389          
    390          /**
    391            * @brief UART2 RX interrupt routine.
    392            * @param  None
    393            * @retval None
    394            */
    395          INTERRUPT_HANDLER(UART2_RX_IRQHandler, 21)
    396          {
    397            /* In order to detect unexpected events during development,
    398               it is recommended to set a breakpoint on the following instruction.
    399            */
    400          }
    401          #endif /* STM8S105 or STM8AF626x */
    402          
    403          #if defined(STM8S207) || defined(STM8S007) || defined(STM8S208) || defined (STM8AF52Ax) || defined (STM8AF62Ax)
    404          /**
    405            * @brief UART3 TX interrupt routine.
    406            * @param  None
    407            * @retval None
    408            */

   \                                 In section .far_func.text, align 1
    409          INTERRUPT_HANDLER(UART3_TX_IRQHandler, 20)
    410          {
   \                     UART3_TX_IRQHandler:
   \                     _interrupt_22:
   \   000000 8A           PUSH      CC
   \   000001 84           POP       A
   \   000002 A4 BF        AND       A, #0xbf
   \   000004 88           PUSH      A
   \   000005 86           POP       CC
   \   000006 8D ......    CALLF     L:?push_l0
   \   00000A 8D ......    CALLF     L:?push_l1
    411            /* In order to detect unexpected events during development,
    412               it is recommended to set a breakpoint on the following instruction.
    413            */
    414            Send_Next_Char_to_Device();
   \   00000E 8D ......    CALLF     Send_Next_Char_to_Device
    415          }
   \   000012 8D ......    CALLF     L:?pop_l1
   \   000016 8D ......    CALLF     L:?pop_l0
   \   00001A 80           IRET
    416          
    417          /**
    418            * @brief UART3 RX interrupt routine.
    419            * @param  None
    420            * @retval None
    421            */

   \                                 In section .far_func.text, align 1
    422          INTERRUPT_HANDLER(UART3_RX_IRQHandler, 21)
    423          {
   \                     UART3_RX_IRQHandler:
   \                     _interrupt_23:
   \   000000 8A           PUSH      CC
   \   000001 84           POP       A
   \   000002 A4 BF        AND       A, #0xbf
   \   000004 88           PUSH      A
   \   000005 86           POP       CC
   \   000006 8D ......    CALLF     L:?push_l0
   \   00000A 8D ......    CALLF     L:?push_l1
    424            /* In order to detect unexpected events during development,
    425               it is recommended to set a breakpoint on the following instruction.
    426            */
    427            Get_Device_Char();
   \   00000E 8D ......    CALLF     Get_Device_Char
    428          }
   \   000012 8D ......    CALLF     L:?pop_l1
   \   000016 8D ......    CALLF     L:?pop_l0
   \   00001A 80           IRET
    429          #endif /*STM8S208 or STM8S207 or STM8AF52Ax or STM8AF62Ax */
    430          
    431          #if defined(STM8S207) || defined(STM8S007) || defined(STM8S208) || defined (STM8AF52Ax) || defined (STM8AF62Ax)
    432          /**
    433            * @brief ADC2 interrupt routine.
    434            * @param  None
    435            * @retval None
    436            */

   \                                 In section .far_func.text, align 1
    437          INTERRUPT_HANDLER(ADC2_IRQHandler, 22)
    438          {
    439            /* In order to detect unexpected events during development,
    440               it is recommended to set a breakpoint on the following instruction.
    441            */
    442          }
   \                     ADC2_IRQHandler:
   \                     _interrupt_24:
   \   000000 80           IRET
    443          #else /*STM8S105, STM8S103 or STM8S903 or STM8AF626x */
    444          /**
    445          * @brief ADC1 interrupt routine.
    446          * @par Parameters:
    447          * None
    448          * @retval
    449          * None
    450          */
    451          INTERRUPT_HANDLER(ADC1_IRQHandler, 22)
    452          {
    453            /* In order to detect unexpected events during development,
    454            it is recommended to set a breakpoint on the following instruction.
    455            */
    456          }
    457          #endif /*STM8S208 or STM8S207 or STM8AF52Ax or STM8AF62Ax */
    458          
    459          #ifdef STM8S903
    460          /**
    461            * @brief Timer6 Update/Overflow/Trigger Interrupt routine.
    462            * @param  None
    463            * @retval None
    464            */
    465          INTERRUPT_HANDLER(TIM6_UPD_OVF_TRG_IRQHandler, 23)
    466          {
    467            /* In order to detect unexpected events during development,
    468               it is recommended to set a breakpoint on the following instruction.
    469            */
    470          }
    471          #else /*STM8S208, STM8S207, STM8S105 or STM8S103 or STM8AF52Ax or STM8AF62Ax or STM8AF626x */
    472          /**
    473          * @brief Timer4 Update/Overflow Interrupt routine.
    474          * @param  None
    475          * @retval None
    476          */

   \                                 In section .far_func.text, align 1
    477          INTERRUPT_HANDLER(TIM4_UPD_OVF_IRQHandler, 23)
    478          {
    479            /* In order to detect unexpected events during development,
    480            it is recommended to set a breakpoint on the following instruction.
    481            */
    482          }
   \                     TIM4_UPD_OVF_IRQHandler:
   \                     _interrupt_25:
   \   000000 80           IRET
    483          #endif /*STM8S903*/
    484          
    485          /**
    486            * @brief Eeprom EEC Interrupt routine.
    487            * @param  None
    488            * @retval None
    489            */

   \                                 In section .far_func.text, align 1
    490          INTERRUPT_HANDLER(EEPROM_EEC_IRQHandler, 24)
    491          {
    492            /* In order to detect unexpected events during development,
    493               it is recommended to set a breakpoint on the following instruction.
    494            */
    495          }
   \                     EEPROM_EEC_IRQHandler:
   \                     _interrupt_26:
   \   000000 80           IRET
    496          
    497          /**
    498            * @}
    499            */
    500          
    501          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/

   Section sizes:

   Bytes  Function/Label
   -----  --------------
       1  ADC2_IRQHandler
       1  AWU_IRQHandler
       1  CLK_IRQHandler
       1  EEPROM_EEC_IRQHandler
       1  EXTI_PORTA_IRQHandler
       1  EXTI_PORTB_IRQHandler
       1  EXTI_PORTC_IRQHandler
       1  EXTI_PORTD_IRQHandler
       1  EXTI_PORTE_IRQHandler
       2  FCTimer
       1  I2C_IRQHandler
       2  LoopControlDelay
       1  SPI_IRQHandler
       2  SetCmdExitTimer
       2  SetCmdTempTimer1
       2  SetCmdTempTimer2
       2  StartupTimer
       2  SysOnOffTmr
       2  SysSSTimer
       1  TIM1_CAP_COM_IRQHandler
      35  TIM1_UPD_OVF_TRG_BRK_IRQHandler
       1  TIM2_CAP_COM_IRQHandler
       1  TIM2_UPD_OVF_BRK_IRQHandler
       1  TIM3_CAP_COM_IRQHandler
       1  TIM3_UPD_OVF_BRK_IRQHandler
       1  TIM4_UPD_OVF_IRQHandler
       1  TLI_IRQHandler
       1  TRAP_IRQHandler
      27  UART1_RX_IRQHandler
      27  UART1_TX_IRQHandler
      27  UART3_RX_IRQHandler
      27  UART3_TX_IRQHandler

 
 162 bytes in section .far_func.text
  16 bytes in section .near.bss
 
 162 bytes of CODE memory
  16 bytes of DATA memory

Errors: none
Warnings: none
